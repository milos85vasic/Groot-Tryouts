buildscript {
    repositories {
        maven {
            // url uri(new File("${System.getProperty("user.home")}${File.separator}Groot${File.separator}Repository").absolutePath)
            url uri("http://repo.milosvasic.net/releases")
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        // classpath group: 'net.milosvasic.groot', name: 'Groot', version: '1.0.0-Alpha-5-SNAPSHOT'
        classpath group: 'net.milosvasic.groot', name: 'Groot', version: '1.0.0-Beta-1'

        classpath "com.android.tools.build:gradle:2.3.0"
    }
}

apply plugin: "groot"
apply plugin: "groot-android-library"
apply plugin: "groot-credentials"

groot.registerRepository("http://repo.milosvasic.net/releases")
groot.registerRepository("http://repo.milosvasic.net/development")

final alpha = 0
final beta = 0
final version = 1
final secondaryVersion = 0
final tertiaryVersion = 0
final projectPackage = "android"
final projectGroup = "net.milosvasic.tryout.groot"

groot.android.project.setup(
        alpha,
        beta,
        version,
        secondaryVersion,
        tertiaryVersion,
        projectGroup,
        projectPackage,
        false // We will disable proguard!
)

groot.android.project.setupFlavor("checking") // Some random flavors
groot.android.project.setupFlavor("releasing")
groot.android.project.setupFlavor("evil")
groot.android.project.setupFlavor("payments")

groot.android.project.setupBuildVariant("qa")
groot.android.project.setupBuildVariant("staging")

String fullPackage = groot.android.project.projectPackage
String fullVersion = groot.android.project.projectVersion

groot.deployment.ftp.host = ftpServer
groot.deployment.ftp.username = ftpUsername
groot.deployment.ftp.password = ftpPassword
groot.deployment.setup(fullPackage, fullVersion)

dependencies {
    requireModule(':Tryout_Android_Library')
}